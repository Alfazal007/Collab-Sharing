// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Provider {
  GOOGLE
  CREDENTIALS
}

model User {
  id                    String      @id @default(uuid())
  username              String
  name                  String
  email                 String      @unique
  provider              Provider    @default(GOOGLE)
  password              String
  interestedCommunities Community[] @relation("UserToCommunity")
  Community             Community[]
  Post                  Post[]
  savedPost             Save[]
}

model Community {
  id      String @id @default(uuid())
  name    String @unique
  members User[] @relation("UserToCommunity")
  admin   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String
  posts   Post[] @relation("PostInCommunity")
}

model Post {
  id                  String      @id @default(uuid())
  title               String
  content             String
  creator             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId              String
  linkedToCommunities Community[] @relation("PostInCommunity")
  savedPost           Save[]
}

model Save {
  id       String @id @default(uuid())
  User     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  category String
  Post     Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId   String
}
